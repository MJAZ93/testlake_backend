// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/forgot-password": {
            "post": {
                "description": "Send password reset email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "Email for password reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate a new JWT token from valid existing token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/resend-email-confirmation": {
            "post": {
                "description": "Resend email confirmation to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email confirmation",
                "parameters": [
                    {
                        "description": "Email to resend confirmation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResendEmailConfirmationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "description": "Reset password with valid reset token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Password reset data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signin": {
            "post": {
                "description": "Authenticate user with email and password, returns JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignInOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signout": {
            "post": {
                "description": "Sign out current user (invalidate JWT token)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Create a new user account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify-email/{token}": {
            "get": {
                "description": "Verify user email with verification token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email verification token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific invoice by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get invoice",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.InvoiceOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}/download": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download a specific invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Download invoice",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to invoice PDF"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}/pay": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Process payment for an invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Pay invoice",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment data",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/billing.PayInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.PaymentOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of organizations for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Get organizations",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default 0)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.OrganizationListOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Create organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Organization data",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.CreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/organization.OrganizationOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get organization details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Get organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.OrganizationOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update organization details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization update data",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.OrganizationOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/billing/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get billing history for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get billing history",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.BillingHistoryOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/billing/overview": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get billing overview for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get billing overview",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.BillingOverviewOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/invite": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invite a user to join the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Invite member",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Invitation data",
                        "name": "invite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.InviteMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.InviteOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/invites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of pending invitations for the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Get pending invites",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.PendingInvitesOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/invoices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get invoices for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get invoices",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.InvoiceListOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/members": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of organization members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Get organization members",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization.MembersOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/members/{userId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a member from the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Remove member",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID to remove",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/members/{userId}/role": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a member's role in the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Management"
                ],
                "summary": "Update member role",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role update data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization.UpdateMemberRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/payment-methods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all payment methods for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Get payment methods",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.PaymentMethodListOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new payment method for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Create payment method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment method data",
                        "name": "paymentMethod",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.CreatePaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/payment.PaymentMethodOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/payment-methods/{pmId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Update payment method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method ID",
                        "name": "pmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment method data",
                        "name": "paymentMethod",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.UpdatePaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.PaymentMethodOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Delete payment method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method ID",
                        "name": "pmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/payment-methods/{pmId}/set-default": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Set a payment method as the default for the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Set default payment method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method ID",
                        "name": "pmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current subscription for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get organization subscription",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel an organization's subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Cancel subscription",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription/change-plan": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the plan for an existing subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Change subscription plan",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan change data",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription.ChangePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new subscription for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create subscription",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription data",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription/reactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reactivate a cancelled subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Reactivate subscription",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/subscription/usage": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current usage metrics for an organization's subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription usage",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionUsageOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/plans": {
            "get": {
                "description": "Get all available subscription plans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plans"
                ],
                "summary": "Get all plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plan.PlanListOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/plans/compare": {
            "get": {
                "description": "Get all plans for comparison",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plans"
                ],
                "summary": "Compare plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plan.PlanComparisonOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/plans/{id}": {
            "get": {
                "description": "Get specific plan information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plans"
                ],
                "summary": "Get plan by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plan.PlanOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/account": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete current user's account permanently",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user dashboard with overview of projects and activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get user dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.DashboardOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/invites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all pending organization invitations for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get pending invitations",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.PendingInvitesOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/invites/{token}/accept": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept an organization invitation using the invitation token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Accept organization invite",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invitation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.AcceptInviteOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/invites/{token}/deny": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Decline an organization invitation using the invitation token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Deny organization invite",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invitation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.DenyInviteOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of user notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.NotificationsOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/notifications/{id}/read": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a specific notification as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserOut"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "format": "Bearer {token}",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User profile data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/inout.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthData": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/auth.AuthUser"
                }
            }
        },
        "auth.AuthUser": {
            "type": "object",
            "properties": {
                "auth_provider": {
                    "$ref": "#/definitions/model.AuthProvider"
                },
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.UserStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.RefreshTokenOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.TokenData"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "auth.ResendEmailConfirmationRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.SignInOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.AuthData"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "auth.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.AuthData"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpRequest": {
            "type": "object",
            "required": [
                "auth_provider",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "auth_provider": {
                    "$ref": "#/definitions/model.AuthProvider"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "auth.TokenData": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "billing.BillingHistoryItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "description": "\"invoice\" or \"payment\"",
                    "type": "string"
                }
            }
        },
        "billing.BillingHistoryOut": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billing.BillingHistoryItem"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/inout.PaginationMeta"
                }
            }
        },
        "billing.BillingOverview": {
            "type": "object",
            "properties": {
                "current_plan": {
                    "$ref": "#/definitions/plan.Plan"
                },
                "current_subscription": {
                    "$ref": "#/definitions/subscription.Subscription"
                },
                "current_usage": {
                    "$ref": "#/definitions/subscription.UsageMetrics"
                },
                "next_billing_amount": {
                    "type": "number"
                },
                "next_billing_date": {
                    "type": "string"
                },
                "plan_limits": {
                    "$ref": "#/definitions/subscription.PlanLimits"
                },
                "recent_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payment.Payment"
                    }
                },
                "unpaid_invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billing.Invoice"
                    }
                }
            }
        },
        "billing.BillingOverviewOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/billing.BillingOverview"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "billing.Invoice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "billing_period_end": {
                    "type": "string"
                },
                "billing_period_start": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_number": {
                    "type": "string"
                },
                "invoice_url": {
                    "type": "string"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billing.InvoiceLineItem"
                    }
                },
                "organization_id": {
                    "type": "string"
                },
                "paid_at": {
                    "type": "string"
                },
                "paypal_invoice_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.InvoiceStatus"
                },
                "subscription_id": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "number"
                },
                "total_amount": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "billing.InvoiceLineItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                }
            }
        },
        "billing.InvoiceListOut": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billing.Invoice"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/inout.PaginationMeta"
                }
            }
        },
        "billing.InvoiceOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/billing.Invoice"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "billing.PayInvoiceRequest": {
            "type": "object",
            "required": [
                "payment_method_id"
            ],
            "properties": {
                "payment_method_id": {
                    "type": "string"
                }
            }
        },
        "billing.PaymentOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/payment.Payment"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "inout.BaseResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "inout.PaginationMeta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "model.AuthProvider": {
            "type": "string",
            "enum": [
                "email",
                "gmail",
                "apple"
            ],
            "x-enum-varnames": [
                "AuthProviderEmail",
                "AuthProviderGmail",
                "AuthProviderApple"
            ]
        },
        "model.BillingCycle": {
            "type": "string",
            "enum": [
                "monthly",
                "yearly"
            ],
            "x-enum-varnames": [
                "BillingCycleMonthly",
                "BillingCycleYearly"
            ]
        },
        "model.InvoiceStatus": {
            "type": "string",
            "enum": [
                "draft",
                "sent",
                "paid",
                "cancelled",
                "refunded"
            ],
            "x-enum-varnames": [
                "InvoiceStatusDraft",
                "InvoiceStatusSent",
                "InvoiceStatusPaid",
                "InvoiceStatusCancelled",
                "InvoiceStatusRefunded"
            ]
        },
        "model.OrganizationStatus": {
            "type": "string",
            "enum": [
                "active",
                "suspended",
                "cancelled"
            ],
            "x-enum-varnames": [
                "OrganizationStatusActive",
                "OrganizationStatusSuspended",
                "OrganizationStatusCancelled"
            ]
        },
        "model.PaymentMethodEnum": {
            "type": "string",
            "enum": [
                "paypal"
            ],
            "x-enum-varnames": [
                "PaymentMethodEnumPayPal"
            ]
        },
        "model.PaymentMethodType": {
            "type": "string",
            "enum": [
                "paypal"
            ],
            "x-enum-varnames": [
                "PaymentMethodTypePayPal"
            ]
        },
        "model.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "cancelled",
                "refunded"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusCompleted",
                "PaymentStatusFailed",
                "PaymentStatusCancelled",
                "PaymentStatusRefunded"
            ]
        },
        "model.PlanType": {
            "type": "string",
            "enum": [
                "free",
                "starter",
                "professional",
                "enterprise"
            ],
            "x-enum-varnames": [
                "PlanTypeFree",
                "PlanTypeStarter",
                "PlanTypeProfessional",
                "PlanTypeEnterprise"
            ]
        },
        "model.SubscriptionStatus": {
            "type": "string",
            "enum": [
                "active",
                "cancelled",
                "suspended",
                "expired",
                "pending"
            ],
            "x-enum-varnames": [
                "SubscriptionStatusActive",
                "SubscriptionStatusCancelled",
                "SubscriptionStatusSuspended",
                "SubscriptionStatusExpired",
                "SubscriptionStatusPending"
            ]
        },
        "model.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "suspended",
                "inactive"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusSuspended",
                "UserStatusInactive"
            ]
        },
        "organization.CreateOrganizationRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "max_projects": {
                    "type": "integer"
                },
                "max_users": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 2
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanType"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "organization.InviteMemberRequest": {
            "type": "object",
            "required": [
                "email",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "member",
                        "admin"
                    ]
                }
            }
        },
        "organization.InviteOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/organization.InviteResult"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "organization.InviteResult": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "organization.Member": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "joined_at": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "organization.MembersOut": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/organization.Member"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "organization.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "max_projects": {
                    "type": "integer"
                },
                "max_users": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanType"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.OrganizationStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "organization.OrganizationListOut": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/organization.Organization"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/inout.PaginationMeta"
                }
            }
        },
        "organization.OrganizationOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/organization.Organization"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "organization.PendingInvite": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_at": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "organization.PendingInvitesOut": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/organization.PendingInvite"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "organization.UpdateMemberRoleRequest": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "member",
                        "admin"
                    ]
                }
            }
        },
        "organization.UpdateOrganizationRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "max_projects": {
                    "type": "integer",
                    "minimum": 1
                },
                "max_users": {
                    "type": "integer",
                    "minimum": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 2
                },
                "plan_type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "payment.CreatePaymentMethodRequest": {
            "type": "object",
            "required": [
                "paypal_email"
            ],
            "properties": {
                "is_default": {
                    "type": "boolean"
                },
                "payment_method_type": {
                    "$ref": "#/definitions/model.PaymentMethodType"
                },
                "paypal_email": {
                    "type": "string"
                },
                "paypal_payer_id": {
                    "type": "string"
                }
            }
        },
        "payment.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "failure_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/model.PaymentMethodEnum"
                },
                "paypal_payer_id": {
                    "type": "string"
                },
                "paypal_payment_id": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.PaymentStatus"
                },
                "subscription_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "payment.PaymentMethod": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_default": {
                    "type": "boolean"
                },
                "organization_id": {
                    "type": "string"
                },
                "payment_method_type": {
                    "$ref": "#/definitions/model.PaymentMethodType"
                },
                "paypal_email": {
                    "type": "string"
                },
                "paypal_payer_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "payment.PaymentMethodListOut": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payment.PaymentMethod"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "payment.PaymentMethodOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/payment.PaymentMethod"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "payment.UpdatePaymentMethodRequest": {
            "type": "object",
            "properties": {
                "is_default": {
                    "type": "boolean"
                },
                "paypal_email": {
                    "type": "string"
                },
                "paypal_payer_id": {
                    "type": "string"
                }
            }
        },
        "plan.Plan": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "max_environments": {
                    "type": "integer"
                },
                "max_projects": {
                    "type": "integer"
                },
                "max_schemas": {
                    "type": "integer"
                },
                "max_test_records_per_schema": {
                    "type": "integer"
                },
                "max_users": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_monthly": {
                    "type": "number"
                },
                "price_yearly": {
                    "type": "number"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "plan.PlanComparison": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plan.Plan"
                    }
                }
            }
        },
        "plan.PlanComparisonOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/plan.PlanComparison"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "plan.PlanListOut": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plan.Plan"
                    }
                }
            }
        },
        "plan.PlanOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/plan.Plan"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "subscription.ChangePlanRequest": {
            "type": "object",
            "required": [
                "billing_cycle",
                "new_plan_id"
            ],
            "properties": {
                "billing_cycle": {
                    "$ref": "#/definitions/model.BillingCycle"
                },
                "new_plan_id": {
                    "type": "string"
                }
            }
        },
        "subscription.CreateSubscriptionRequest": {
            "type": "object",
            "required": [
                "billing_cycle",
                "plan_id"
            ],
            "properties": {
                "billing_cycle": {
                    "$ref": "#/definitions/model.BillingCycle"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "subscription.PlanLimits": {
            "type": "object",
            "properties": {
                "max_environments": {
                    "type": "integer"
                },
                "max_projects": {
                    "type": "integer"
                },
                "max_schemas": {
                    "type": "integer"
                },
                "max_test_records_per_schema": {
                    "type": "integer"
                },
                "max_users": {
                    "type": "integer"
                }
            }
        },
        "subscription.Subscription": {
            "type": "object",
            "properties": {
                "billing_cycle": {
                    "$ref": "#/definitions/model.BillingCycle"
                },
                "cancel_at_period_end": {
                    "type": "boolean"
                },
                "cancelled_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "current_period_end": {
                    "type": "string"
                },
                "current_period_start": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "paypal_subscription_id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.SubscriptionStatus"
                },
                "trial_end": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "subscription.SubscriptionOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/subscription.Subscription"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "subscription.SubscriptionUsageOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/subscription.UsageData"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "subscription.UsageData": {
            "type": "object",
            "properties": {
                "current_usage": {
                    "$ref": "#/definitions/subscription.UsageMetrics"
                },
                "period_end": {
                    "type": "string"
                },
                "period_start": {
                    "type": "string"
                },
                "plan_limits": {
                    "$ref": "#/definitions/subscription.PlanLimits"
                }
            }
        },
        "subscription.UsageMetrics": {
            "type": "object",
            "properties": {
                "api_requests_count": {
                    "type": "integer"
                },
                "environments_count": {
                    "type": "integer"
                },
                "projects_count": {
                    "type": "integer"
                },
                "schemas_count": {
                    "type": "integer"
                },
                "test_records_count": {
                    "type": "integer"
                },
                "users_count": {
                    "type": "integer"
                }
            }
        },
        "user.AcceptInviteOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.AcceptInviteResult"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "user.AcceptInviteResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user.ActivityItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.DashboardData": {
            "type": "object",
            "properties": {
                "organization_count": {
                    "type": "integer"
                },
                "personal_projects": {
                    "type": "integer"
                },
                "recent_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.ActivityItem"
                    }
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "user.DashboardOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.DashboardData"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "user.DenyInviteOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.DenyInviteResult"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "user.DenyInviteResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.NotificationsOut": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Notification"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "user.PendingInvite": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_at": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.PendingInvitesOut": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.PendingInvite"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "auth_provider": {
                    "$ref": "#/definitions/model.AuthProvider"
                },
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.UserStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UserOut": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.User"
                },
                "error_code": {
                    "type": "integer"
                },
                "error_description": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
